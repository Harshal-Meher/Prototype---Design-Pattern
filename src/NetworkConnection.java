public class NetworkConnection implements Cloneable {    private String ip;    private String data;    public NetworkConnection() {    }    public NetworkConnection(String ip, String data) {        this.ip = ip;        this.data = data;    }    public String getIp() {        return ip;    }    public void setIp(String ip) {        this.ip = ip;    }    public String getData() {        return data;    }    public void setData(String data) {        this.data = data;    }    @Override    public String toString() {        return "NetworkConnection{" +                "ip='" + ip + '\'' +                ", data='" + data + '\'' +                '}';    }    public void loadData() throws InterruptedException {        this.data = "Important Data";        Thread.sleep(5000);    }//    @Override//    public NetworkConnection clone() {//        try {//            NetworkConnection clone = (NetworkConnection) super.clone();//            // TODO: copy mutable state here, so the clone can't change the internals of the original//            return clone;//        } catch (CloneNotSupportedException e) {//            throw new AssertionError();//        }//    }    @Override    public Object clone() throws CloneNotSupportedException{        return super.clone();    }}